{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordovaPropertyGet, cordovaPropertySet, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\n\nvar ScreenOrientation =\n/** @class */\nfunction (_super) {\n  __extends(ScreenOrientation, _super);\n\n  function ScreenOrientation() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Convenience enum for possible orientations\n     */\n\n\n    _this.ORIENTATIONS = {\n      PORTRAIT_PRIMARY: 'portrait-primary',\n      PORTRAIT_SECONDARY: 'portrait-secondary',\n      LANDSCAPE_PRIMARY: 'landscape-primary',\n      LANDSCAPE_SECONDARY: 'landscape-secondary',\n      PORTRAIT: 'portrait',\n      LANDSCAPE: 'landscape',\n      ANY: 'any'\n    };\n    return _this;\n  }\n\n  ScreenOrientation.prototype.onChange = function () {\n    return cordova(this, \"onChange\", {\n      \"eventObservable\": true,\n      \"event\": \"orientationchange\",\n      \"element\": \"window\"\n    }, arguments);\n  };\n\n  ScreenOrientation.prototype.lock = function (orientation) {\n    return cordova(this, \"lock\", {\n      \"otherPromise\": true\n    }, arguments);\n  };\n\n  ScreenOrientation.prototype.unlock = function () {\n    return cordova(this, \"unlock\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Object.defineProperty(ScreenOrientation.prototype, \"type\", {\n    get: function get() {\n      return cordovaPropertyGet(this, \"type\");\n    },\n    set: function set(value) {\n      cordovaPropertySet(this, \"type\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ScreenOrientation.pluginName = \"ScreenOrientation\";\n  ScreenOrientation.plugin = \"cordova-plugin-screen-orientation\";\n  ScreenOrientation.pluginRef = \"screen.orientation\";\n  ScreenOrientation.repo = \"https://github.com/apache/cordova-plugin-screen-orientation\";\n  ScreenOrientation.platforms = [\"Android\", \"iOS\", \"Windows\"];\n\n  ScreenOrientation.ɵfac = /*@__PURE__*/function () {\n    var ɵScreenOrientation_BaseFactory;\n    return function ScreenOrientation_Factory(t) {\n      return (ɵScreenOrientation_BaseFactory || (ɵScreenOrientation_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ScreenOrientation)))(t || ScreenOrientation);\n    };\n  }();\n\n  ScreenOrientation.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ScreenOrientation,\n    factory: function factory(t) {\n      return ScreenOrientation.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return ScreenOrientation;\n}(IonicNativePlugin);\n\nexport { ScreenOrientation }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvc2NyZWVuLW9yaWVudGF0aW9uL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHNFQUF1RCxNQUFNLG9CQUFvQixDQUFDO0FBQ3pGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBQ2xDO0FBRzBCLElBdURhLHFDQUFpQjtBQUFDO0FBRTlCO0FBR0ssUUFKOUI7QUFDRjtBQUVBLFdBREs7QUFDTCxRQUFFLGtCQUFZLEdBQUc7QUFDakIsWUFBSSxnQkFBZ0IsRUFBRSxrQkFBa0I7QUFDeEMsWUFBSSxrQkFBa0IsRUFBRSxvQkFBb0I7QUFDNUMsWUFBSSxpQkFBaUIsRUFBRSxtQkFBbUI7QUFDMUMsWUFBSSxtQkFBbUIsRUFBRSxxQkFBcUI7QUFDOUMsWUFBSSxRQUFRLEVBQUUsVUFBVTtBQUN4QixZQUFJLFNBQVMsRUFBRSxXQUFXO0FBQzFCLFlBQUksR0FBRyxFQUFFLEtBQUs7QUFDZCxTQUFHLENBQUM7QUFDSjtBQUNnQjtBQUFNLElBUXBCLG9DQUFRO0FBT08sSUFJZixnQ0FBSSxhQUFDLFdBQW1CO0FBS08sSUFHL0Isa0NBQU07QUFLQSwwQkFDTixtQ0FBSTtBQUFJO0FBRXFEO0FBQTRFO0FBQTJCO0FBQTJCO0FBQVE7QUFBd0Q7QUFBb0U7QUFBd0Q7QUFBNEY7cURBbER4ZCxVQUFVOzs7OzBCQUNMO0FBQUMsNEJBN0RQO0FBQUUsRUE2RHFDLGlCQUFpQjtBQUN2RCxTQURZLGlCQUFpQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgQ29yZG92YVByb3BlcnR5LCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuLyoqXG4gKiBAbmFtZSBTY3JlZW4gT3JpZW50YXRpb25cbiAqIEBwcmVtaWVyIHNjcmVlbi1vcmllbnRhdGlvblxuICogQGRlc2NyaXB0aW9uXG4gKiBDb3Jkb3ZhIHBsdWdpbiB0byBzZXQvbG9jayB0aGUgc2NyZWVuIG9yaWVudGF0aW9uIGluIGEgY29tbW9uIHdheS5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLXNjcmVlbi1vcmllbnRhdGlvbmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtTY3JlZW4gT3JpZW50YXRpb24gcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNjcmVlbk9yaWVudGF0aW9uIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zY3JlZW4tb3JpZW50YXRpb24vbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNjcmVlbk9yaWVudGF0aW9uOiBTY3JlZW5PcmllbnRhdGlvbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIC8vIGdldCBjdXJyZW50XG4gKiBjb25zb2xlLmxvZyh0aGlzLnNjcmVlbk9yaWVudGF0aW9uLnR5cGUpOyAvLyBsb2dzIHRoZSBjdXJyZW50IG9yaWVudGF0aW9uLCBleGFtcGxlOiAnbGFuZHNjYXBlJ1xuICpcbiAqIC8vIHNldCB0byBsYW5kc2NhcGVcbiAqIHRoaXMuc2NyZWVuT3JpZW50YXRpb24ubG9jayh0aGlzLnNjcmVlbk9yaWVudGF0aW9uLk9SSUVOVEFUSU9OUy5MQU5EU0NBUEUpO1xuICpcbiAqIC8vIGFsbG93IHVzZXIgcm90YXRlXG4gKiB0aGlzLnNjcmVlbk9yaWVudGF0aW9uLnVubG9jaygpO1xuICpcbiAqIC8vIGRldGVjdCBvcmllbnRhdGlvbiBjaGFuZ2VzXG4gKiB0aGlzLnNjcmVlbk9yaWVudGF0aW9uLm9uQ2hhbmdlKCkuc3Vic2NyaWJlKFxuICogICAgKCkgPT4ge1xuICogICAgICAgIGNvbnNvbGUubG9nKFwiT3JpZW50YXRpb24gQ2hhbmdlZFwiKTtcbiAqICAgIH1cbiAqICk7XG4gKlxuICogYGBgXG4gKlxuICogQGFkdmFuY2VkXG4gKlxuICogQWNjZXB0ZWQgb3JpZW50YXRpb24gdmFsdWVzOlxuICpcbiAqIHwgVmFsdWUgICAgICAgICAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAqIHwgcG9ydHJhaXQtcHJpbWFyeSAgICAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgaW4gdGhlIHByaW1hcnkgcG9ydHJhaXQgbW9kZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgcG9ydHJhaXQtc2Vjb25kYXJ5ICAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgaW4gdGhlIHNlY29uZGFyeSBwb3J0cmFpdCBtb2RlLiAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgbGFuZHNjYXBlLXByaW1hcnkgICAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgaW4gdGhlIHByaW1hcnkgbGFuZHNjYXBlIG1vZGUuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgbGFuZHNjYXBlLXNlY29uZGFyeSAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgaW4gdGhlIHNlY29uZGFyeSBsYW5kc2NhcGUgbW9kZS4gICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgcG9ydHJhaXQgICAgICAgICAgICAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgZWl0aGVyIHBvcnRyYWl0LXByaW1hcnkgb3IgcG9ydHJhaXQtc2Vjb25kYXJ5IChzZW5zb3IpLiAgIHxcbiAqIHwgbGFuZHNjYXBlICAgICAgICAgICAgICAgICAgICAgfCBUaGUgb3JpZW50YXRpb24gaXMgZWl0aGVyIGxhbmRzY2FwZS1wcmltYXJ5IG9yIGxhbmRzY2FwZS1zZWNvbmRhcnkgKHNlbnNvcikuIHxcbiAqXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU2NyZWVuT3JpZW50YXRpb24nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zY3JlZW4tb3JpZW50YXRpb24nLFxuICBwbHVnaW5SZWY6ICdzY3JlZW4ub3JpZW50YXRpb24nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1zY3JlZW4tb3JpZW50YXRpb24nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTY3JlZW5PcmllbnRhdGlvbiBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGVudW0gZm9yIHBvc3NpYmxlIG9yaWVudGF0aW9uc1xuICAgKi9cbiAgT1JJRU5UQVRJT05TID0ge1xuICAgIFBPUlRSQUlUX1BSSU1BUlk6ICdwb3J0cmFpdC1wcmltYXJ5JyxcbiAgICBQT1JUUkFJVF9TRUNPTkRBUlk6ICdwb3J0cmFpdC1zZWNvbmRhcnknLFxuICAgIExBTkRTQ0FQRV9QUklNQVJZOiAnbGFuZHNjYXBlLXByaW1hcnknLFxuICAgIExBTkRTQ0FQRV9TRUNPTkRBUlk6ICdsYW5kc2NhcGUtc2Vjb25kYXJ5JyxcbiAgICBQT1JUUkFJVDogJ3BvcnRyYWl0JyxcbiAgICBMQU5EU0NBUEU6ICdsYW5kc2NhcGUnLFxuICAgIEFOWTogJ2FueScsXG4gIH07XG4gIC8qKlxuICAgKiBMaXN0ZW4gdG8gb3JpZW50YXRpb24gY2hhbmdlIGV2ZW50XG4gICAqIEByZXR1cm4ge09ic2VydmFibGU8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxuICAgIGV2ZW50OiAnb3JpZW50YXRpb25jaGFuZ2UnLFxuICAgIGVsZW1lbnQ6ICd3aW5kb3cnLFxuICB9KVxuICBvbkNoYW5nZSgpOiBPYnNlcnZhYmxlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTG9jayB0aGUgb3JpZW50YXRpb24gdG8gdGhlIHBhc3NlZCB2YWx1ZS5cbiAgICogU2VlIGJlbG93IGZvciBhY2NlcHRlZCB2YWx1ZXNcbiAgICogQHBhcmFtIG9yaWVudGF0aW9uIHtzdHJpbmd9IFRoZSBvcmllbnRhdGlvbiB3aGljaCBzaG91bGQgYmUgbG9ja2VkLiBBY2NlcHRlZCB2YWx1ZXMgc2VlIHRhYmxlIGFib3ZlLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7IG90aGVyUHJvbWlzZTogdHJ1ZSB9KVxuICBsb2NrKG9yaWVudGF0aW9uOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBVbmxvY2sgYW5kIGFsbG93IGFsbCBvcmllbnRhdGlvbnMuXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgdW5sb2NrKCk6IHZvaWQge31cblxuICAvKipcbiAgICogR2V0IHRoZSBjdXJyZW50IG9yaWVudGF0aW9uIG9mIHRoZSBkZXZpY2UuXG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgdHlwZTogc3RyaW5nO1xufVxuIl19","map":null,"metadata":{},"sourceType":"module"}